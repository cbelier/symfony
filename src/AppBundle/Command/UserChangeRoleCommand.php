<?php
/**
 * Created by PhpStorm.
 * User: wamobi12
 * Date: 26/01/17
 * Time: 11:55
 */

namespace AppBundle\Command;


use Symfony\Bundle\FrameworkBundle\Command\ContainerAwareCommand;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;

class UserChangeRoleCommand extends ContainerAwareCommand
{
    //En fait la on va chercher les méthodes (clique droit, generate, overide methode et on prend les méthodes configure et execute.
    //L'interet est qu'en une commande on peut créer tout un programme et ainsi effectuer des taches plus rapidement
    protected function configure()
    {
        parent::configure(); // TODO: Change the autogenerated stub

        $this->setName('app:user:role:add')
        ->setDescription('Ajouter un role sur un utilisateur')
        ->addArgument('username', InputArgument::REQUIRED, 'Define username')
        ->addArgument('role', InputArgument::REQUIRED, 'Define role');
    }

    protected function execute(InputInterface $input, OutputInterface $output)
    {
        $username = $input->getArgument('username');
        $role = $input->getArgument('role');
        //parent::execute($input, $output); // TODO: Change the autogenerated stub

        $container = $this->getContainer();

        $doctrine = $container->get('doctrine');

        $rcUser = $doctrine->getRepository('adminBundle:User')->findOneby([
            'username' => $username
    ]);

        //On capitalise
        $rcRole = $doctrine->getRepository('adminBundle:Role')->findOneby([
            'name' => 'ROLE_'.strtoupper($role)
        ]);

        $rcUser->addRole($rcRole);

        $em = $doctrine->getManager();
        $em->persist($rcUser);
        $em->flush();

        //On peut créer plusieurs sorties
        $output->writeln("$username // $role");

    }

}